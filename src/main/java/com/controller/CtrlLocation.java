package com.controller;

import com.model.Location;
import com.repository.Locations;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@RestController
@RequestMapping(path = "/location")
public class CtrlLocation {

    @Autowired // This means to get the bean called locationsRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private Locations locationRepository;

    @GetMapping(path="/lst")
    public @ResponseBody Iterable<Location> listLocations() {
        // This returns a JSON or XML with the locations
        return locationRepository.findAll();
    }

    @RequestMapping(path="/{id}", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity<Location> getLocation(@PathVariable("id") long id){
        System.out.println("Fetching Location with id " + id);
        Optional<Location> l = locationRepository.findById(id);
        if (l.get() == null) {
            System.out.println("Location with id " + id + " not found");
            return new ResponseEntity<Location>(HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<Location>(l.get(), HttpStatus.OK);
    }
}
